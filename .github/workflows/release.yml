name: Release CI

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release the current version
    runs-on: ubuntu-latest

    steps:
      - name: Check out the system
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3

      - name: Install Classic Level
        run: npm install classic-level

      # Get the system name and version
      - name: Get the system name
        id: name
        uses: notiz-dev/github-action-json-property@release
        with:
          path: system.json
          prop_path: id
      - name: Get the system version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: system.json
          prop_path: version

      # Create the distribution-ready system
      - name: Create the distribution-ready system
        run: |
          mkdir packs/bestiary packs/features
          mkdir dist dist/packs
          cp -pr README.md LICENSE.txt system.json template.json \
              assets css fonts lang system templates dist
          node build/jsontopack.mjs actors ./dist/packs ./packs/archetypes ./packs/bestiary
          node build/jsontopack.mjs journal ./dist/packs ./packs/documentation
          node build/jsontopack.mjs items ./dist/packs ./packs/features ./packs/gear \
              ./packs/languages ./packs/problems ./packs/schools ./packs/skills \
              ./packs/spells ./packs/talents

      # Create the zip archive of the system
      - name: Create zip archive of the system
        working-directory: dist
        run: zip -r9 ../${{ steps.name.outputs.prop }}.zip *

      # Create the release with its artifacts and description
      - name: Create the release and artifacts
        uses: ncipollo/release-action@v1
        with:
          name: v${{ steps.version.outputs.prop }}
          tag: v${{ steps.version.outputs.prop }}
          allowUpdates: true
          draft: false
          prerelease: false
          artifacts: 'system.json, ${{ steps.name.outputs.prop }}.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
